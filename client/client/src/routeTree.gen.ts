/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as ForgotPasswordIndexImport } from './routes/forgot-password/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as RegisterOtpIndexImport } from './routes/register/otp/index'
import { Route as DashboardUploadIndexImport } from './routes/dashboard/upload/index'
import { Route as DashboardTeamIndexImport } from './routes/dashboard/team/index'
import { Route as DashboardSettingsIndexImport } from './routes/dashboard/settings/index'
import { Route as DashboardInviteIndexImport } from './routes/dashboard/invite/index'
import { Route as DashboardConnectIndexImport } from './routes/dashboard/connect/index'
import { Route as DashboardChannelsIndexImport } from './routes/dashboard/channels/index'
import { Route as DashboardAiAssistantIndexImport } from './routes/dashboard/ai-assistant/index'
import { Route as DashboardChannelsVideosIndexImport } from './routes/dashboard/channels/videos/index'
import { Route as DashboardChannelsVideosIdImport } from './routes/dashboard/channels/videos/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordIndexRoute = ForgotPasswordIndexImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterOtpIndexRoute = RegisterOtpIndexImport.update({
  id: '/register/otp/',
  path: '/register/otp/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardUploadIndexRoute = DashboardUploadIndexImport.update({
  id: '/dashboard/upload/',
  path: '/dashboard/upload/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardTeamIndexRoute = DashboardTeamIndexImport.update({
  id: '/dashboard/team/',
  path: '/dashboard/team/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexImport.update({
  id: '/dashboard/settings/',
  path: '/dashboard/settings/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardInviteIndexRoute = DashboardInviteIndexImport.update({
  id: '/dashboard/invite/',
  path: '/dashboard/invite/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardConnectIndexRoute = DashboardConnectIndexImport.update({
  id: '/dashboard/connect/',
  path: '/dashboard/connect/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardChannelsIndexRoute = DashboardChannelsIndexImport.update({
  id: '/dashboard/channels/',
  path: '/dashboard/channels/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAiAssistantIndexRoute = DashboardAiAssistantIndexImport.update({
  id: '/dashboard/ai-assistant/',
  path: '/dashboard/ai-assistant/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardChannelsVideosIndexRoute =
  DashboardChannelsVideosIndexImport.update({
    id: '/dashboard/channels/videos/',
    path: '/dashboard/channels/videos/',
    getParentRoute: () => rootRoute,
  } as any)

const DashboardChannelsVideosIdRoute = DashboardChannelsVideosIdImport.update({
  id: '/dashboard/channels/videos/$id',
  path: '/dashboard/channels/videos/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password/': {
      id: '/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/ai-assistant/': {
      id: '/dashboard/ai-assistant/'
      path: '/dashboard/ai-assistant'
      fullPath: '/dashboard/ai-assistant'
      preLoaderRoute: typeof DashboardAiAssistantIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/channels/': {
      id: '/dashboard/channels/'
      path: '/dashboard/channels'
      fullPath: '/dashboard/channels'
      preLoaderRoute: typeof DashboardChannelsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/connect/': {
      id: '/dashboard/connect/'
      path: '/dashboard/connect'
      fullPath: '/dashboard/connect'
      preLoaderRoute: typeof DashboardConnectIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/invite/': {
      id: '/dashboard/invite/'
      path: '/dashboard/invite'
      fullPath: '/dashboard/invite'
      preLoaderRoute: typeof DashboardInviteIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/dashboard/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/team/': {
      id: '/dashboard/team/'
      path: '/dashboard/team'
      fullPath: '/dashboard/team'
      preLoaderRoute: typeof DashboardTeamIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/upload/': {
      id: '/dashboard/upload/'
      path: '/dashboard/upload'
      fullPath: '/dashboard/upload'
      preLoaderRoute: typeof DashboardUploadIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/otp/': {
      id: '/register/otp/'
      path: '/register/otp'
      fullPath: '/register/otp'
      preLoaderRoute: typeof RegisterOtpIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/channels/videos/$id': {
      id: '/dashboard/channels/videos/$id'
      path: '/dashboard/channels/videos/$id'
      fullPath: '/dashboard/channels/videos/$id'
      preLoaderRoute: typeof DashboardChannelsVideosIdImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/channels/videos/': {
      id: '/dashboard/channels/videos/'
      path: '/dashboard/channels/videos'
      fullPath: '/dashboard/channels/videos'
      preLoaderRoute: typeof DashboardChannelsVideosIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/forgot-password': typeof ForgotPasswordIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/dashboard/ai-assistant': typeof DashboardAiAssistantIndexRoute
  '/dashboard/channels': typeof DashboardChannelsIndexRoute
  '/dashboard/connect': typeof DashboardConnectIndexRoute
  '/dashboard/invite': typeof DashboardInviteIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/team': typeof DashboardTeamIndexRoute
  '/dashboard/upload': typeof DashboardUploadIndexRoute
  '/register/otp': typeof RegisterOtpIndexRoute
  '/dashboard/channels/videos/$id': typeof DashboardChannelsVideosIdRoute
  '/dashboard/channels/videos': typeof DashboardChannelsVideosIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/forgot-password': typeof ForgotPasswordIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/dashboard/ai-assistant': typeof DashboardAiAssistantIndexRoute
  '/dashboard/channels': typeof DashboardChannelsIndexRoute
  '/dashboard/connect': typeof DashboardConnectIndexRoute
  '/dashboard/invite': typeof DashboardInviteIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/team': typeof DashboardTeamIndexRoute
  '/dashboard/upload': typeof DashboardUploadIndexRoute
  '/register/otp': typeof RegisterOtpIndexRoute
  '/dashboard/channels/videos/$id': typeof DashboardChannelsVideosIdRoute
  '/dashboard/channels/videos': typeof DashboardChannelsVideosIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/forgot-password/': typeof ForgotPasswordIndexRoute
  '/login/': typeof LoginIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/dashboard/ai-assistant/': typeof DashboardAiAssistantIndexRoute
  '/dashboard/channels/': typeof DashboardChannelsIndexRoute
  '/dashboard/connect/': typeof DashboardConnectIndexRoute
  '/dashboard/invite/': typeof DashboardInviteIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/team/': typeof DashboardTeamIndexRoute
  '/dashboard/upload/': typeof DashboardUploadIndexRoute
  '/register/otp/': typeof RegisterOtpIndexRoute
  '/dashboard/channels/videos/$id': typeof DashboardChannelsVideosIdRoute
  '/dashboard/channels/videos/': typeof DashboardChannelsVideosIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard/ai-assistant'
    | '/dashboard/channels'
    | '/dashboard/connect'
    | '/dashboard/invite'
    | '/dashboard/settings'
    | '/dashboard/team'
    | '/dashboard/upload'
    | '/register/otp'
    | '/dashboard/channels/videos/$id'
    | '/dashboard/channels/videos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard/ai-assistant'
    | '/dashboard/channels'
    | '/dashboard/connect'
    | '/dashboard/invite'
    | '/dashboard/settings'
    | '/dashboard/team'
    | '/dashboard/upload'
    | '/register/otp'
    | '/dashboard/channels/videos/$id'
    | '/dashboard/channels/videos'
  id:
    | '__root__'
    | '/'
    | '/dashboard/'
    | '/forgot-password/'
    | '/login/'
    | '/register/'
    | '/dashboard/ai-assistant/'
    | '/dashboard/channels/'
    | '/dashboard/connect/'
    | '/dashboard/invite/'
    | '/dashboard/settings/'
    | '/dashboard/team/'
    | '/dashboard/upload/'
    | '/register/otp/'
    | '/dashboard/channels/videos/$id'
    | '/dashboard/channels/videos/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  ForgotPasswordIndexRoute: typeof ForgotPasswordIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
  DashboardAiAssistantIndexRoute: typeof DashboardAiAssistantIndexRoute
  DashboardChannelsIndexRoute: typeof DashboardChannelsIndexRoute
  DashboardConnectIndexRoute: typeof DashboardConnectIndexRoute
  DashboardInviteIndexRoute: typeof DashboardInviteIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
  DashboardTeamIndexRoute: typeof DashboardTeamIndexRoute
  DashboardUploadIndexRoute: typeof DashboardUploadIndexRoute
  RegisterOtpIndexRoute: typeof RegisterOtpIndexRoute
  DashboardChannelsVideosIdRoute: typeof DashboardChannelsVideosIdRoute
  DashboardChannelsVideosIndexRoute: typeof DashboardChannelsVideosIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  ForgotPasswordIndexRoute: ForgotPasswordIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
  DashboardAiAssistantIndexRoute: DashboardAiAssistantIndexRoute,
  DashboardChannelsIndexRoute: DashboardChannelsIndexRoute,
  DashboardConnectIndexRoute: DashboardConnectIndexRoute,
  DashboardInviteIndexRoute: DashboardInviteIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
  DashboardTeamIndexRoute: DashboardTeamIndexRoute,
  DashboardUploadIndexRoute: DashboardUploadIndexRoute,
  RegisterOtpIndexRoute: RegisterOtpIndexRoute,
  DashboardChannelsVideosIdRoute: DashboardChannelsVideosIdRoute,
  DashboardChannelsVideosIndexRoute: DashboardChannelsVideosIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard/",
        "/forgot-password/",
        "/login/",
        "/register/",
        "/dashboard/ai-assistant/",
        "/dashboard/channels/",
        "/dashboard/connect/",
        "/dashboard/invite/",
        "/dashboard/settings/",
        "/dashboard/team/",
        "/dashboard/upload/",
        "/register/otp/",
        "/dashboard/channels/videos/$id",
        "/dashboard/channels/videos/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/forgot-password/": {
      "filePath": "forgot-password/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/dashboard/ai-assistant/": {
      "filePath": "dashboard/ai-assistant/index.tsx"
    },
    "/dashboard/channels/": {
      "filePath": "dashboard/channels/index.tsx"
    },
    "/dashboard/connect/": {
      "filePath": "dashboard/connect/index.tsx"
    },
    "/dashboard/invite/": {
      "filePath": "dashboard/invite/index.tsx"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/index.tsx"
    },
    "/dashboard/team/": {
      "filePath": "dashboard/team/index.tsx"
    },
    "/dashboard/upload/": {
      "filePath": "dashboard/upload/index.tsx"
    },
    "/register/otp/": {
      "filePath": "register/otp/index.tsx"
    },
    "/dashboard/channels/videos/$id": {
      "filePath": "dashboard/channels/videos/$id.tsx"
    },
    "/dashboard/channels/videos/": {
      "filePath": "dashboard/channels/videos/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
